{"version":3,"sources":["js/TodoReducer.js","js/TodoStore.js","component/Item.jsx","component/List.jsx","component/Header.jsx","component/Form.jsx","component/App.jsx","js/reportWebVitals.js","index.js"],"names":["todoReducer","todos","type","payload","addTodo","length","localStorage","setItem","JSON","stringify","clear","map","todo","id","status","parse","window","getItem","console","log","delete","filter","v","TodoContext","React","createContext","TodoStore","props","useReducer","dispatch","localList","useEffect","Provider","value","children","Item","useContext","itemClassName","data-id","className","onClick","e","Number","target","dataset","title","List","clearAll","todoList","HeaderTodo","Header","Form","inputRef","useRef","action","onSubmit","preventDefault","current","ref","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a30bcc4.chunk.js","sourcesContent":["export const todoReducer = (todos, {type, payload}) => {\n  switch (type) {\n    case \"add_todo\":\n      const addTodo = [...todos,{'title': payload, 'id' :todos.length, 'status' : 'todo', \"delete\":\"no\" }];\n      localStorage.setItem(\"todoList\",JSON.stringify(addTodo)); \n      return addTodo\n\n      case \"init\":\n        return payload;\n\n      case \"clear\":\n        localStorage.clear();\n        return []\n\n      case \"change_status\":\n        todos.map(todo => {\n          if(todo.id === payload) {\n            if(todo.status === \"done\") todo.status = \"todo\";\n            else todo.status = \"done\";\n          }\n          return todo;\n        });\n        localStorage.setItem(\"todoList\",JSON.stringify(todos));\n        return JSON.parse(window.localStorage.getItem(\"todoList\"));\n        \n        case \"delete-todo\":\n          todos.map(todo => {\n            console.log(payload)\n            if(todo.id === payload) {\n              todo.delete = \"yes\";\n            }\n            return todo;\n          });\n          // console.log(todos.filter(v=> v.delete === \"no\"));\n          localStorage.setItem(\"todoList\",JSON.stringify(todos.filter(v=> v.delete === \"no\")));\n          \n        return JSON.parse(window.localStorage.getItem(\"todoList\"));\n\n        \n      default:\n        break;\n    }\n    \n  }\n  ","import React, { useEffect, useReducer } from 'react';\nimport {todoReducer}  from './TodoReducer.js';\n\nexport const TodoContext = React.createContext();\n\n\nconst TodoStore = (props) => {\n  const [todos, dispatch] = useReducer(todoReducer,[]);\n  const localList = JSON.parse(window.localStorage.getItem(\"todoList\"));\n\n\nuseEffect(()=>{\n  if(localList !== null && localList !== [] ){\n    dispatch({type:\"init\",payload:localList});\n    console.log(\"todos를 localList로 변경되었습니다.\")\n  }\n},[]);\n \n  return (\n    <TodoContext.Provider value={ {todos,dispatch,localList} }>\n      {props.children}\n    </TodoContext.Provider>\n  )\n}\n\nexport default TodoStore;\n\n\n// localStorage 에 todos 가 들어간다 \n// list 가 localStorage를 읽어 그에 맞는 개수를 만든다\n// list에서 읽어온 localStorage로 list를 만든다.\n//  \n","import React, {useContext} from 'react'\nimport '../css/Item.css'\nimport { TodoContext } from '../js/TodoStore.js';\n\n\nconst Item = ({todo}) => {\n\n  const {dispatch} = useContext(TodoContext);\n\n  const toggleItem = (e) => {\n      const id = Number(e.target.dataset.id);\n      dispatch({type:'change_status', payload:id});\n  }\n  const itemClassName = todo.status === 'done' ? 'done' : '';\n  \n  const deleteItem = (e) => {\n    const id = Number(e.target.dataset.id);\n    dispatch({type:'delete-todo', payload:id});\n}\n  \n  \n  return ( \n    <li><span data-id={todo.id}className={itemClassName}onClick={toggleItem}>{todo.title}</span><button data-id ={todo.id} onClick= {deleteItem}>✖️</button></li>\n  )\n}\n\nexport default Item\n","import React, {useContext} from 'react'\nimport Item from './Item.jsx'\nimport { TodoContext } from '../js/TodoStore.js';\nimport \"../css/list.css\"\n\nconst List = () => {\n\n  const {localList,dispatch} = useContext(TodoContext);\n\n  let todoList =()=>{\n    if(localList !== null){\n      return localList.map( (todo) =>\n        <Item key={todo.id} todo={todo} />)\n    }\n  }\n  const clearAll = ()=>{\n    dispatch({type: \"clear\"})\n  }\n  const HeaderTodo = () => {\n    if(localList !== null){\n        return<div className=\"item-number\"><span>{localList.filter(v => v.status ===\"todo\").length} Items</span><button className=\"clear-all\"onClick={clearAll}>Claer All</button></div> \n    }\n  }\n  return (\n    <div className =\"todo-list-box\">\n      <ul>\n        {todoList()}\n      </ul>\n      {HeaderTodo()}\n    </div>\n  )\n}\nexport default List","import React from \"react\";\nimport \"../css/header.css\"\n\nconst Header = () => {\n  \n  return (\n        <>\n          <h1 className=\"todo-header\">todos</h1>\n        </>\n  );\n};\n\nexport default Header;\n","import React, { useContext, useRef } from 'react';\nimport {TodoContext} from \"../js/TodoStore.js\"\nimport \"../css/form.css\"\n\n\nconst Form = () =>{\n  const inputRef = useRef(false);\n  const {dispatch} = useContext(TodoContext);\n  \n  const addTodoData = (e) => {\n    e.preventDefault();\n    dispatch({type:\"add_todo\",payload:inputRef.current.value});\n    inputRef.current.value = '';\n  }\n    return(\n        <form action=\"\" onSubmit={addTodoData}>\n          <input type=\"text\" ref = {inputRef}placeholder=\"What s needs to be done?\" className=\"form-input\"/>\n        </form>\n    )\n}\n\nexport default Form;","import React from 'react'\nimport TodoStore from '../js/TodoStore.js';\nimport List from './List.jsx';\nimport Header from './Header.jsx';\nimport Form from './Form.jsx';\nimport '../css/App.css';\n\nconst App = () => {\n  return (\n    <TodoStore>\n      <Header />\n      <Form  />\n      <List />\n    </TodoStore>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './component/App';\nimport reportWebVitals from './js/reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}